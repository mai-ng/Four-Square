/**
 * 
 */
package csc7327.analysis;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;

import org.joda.time.DateTime;

import csc7327.objects.CheckIn;

/**
 * @author luongnv89
 * 
 */
public class DataAnalyzer {
	/**
	 * The name of the city where the data is collected
	 */
	String cityName;
	/**
	 * The url to get the data source file
	 */
	String dataURL;
	/**
	 * List all the checkins of the city divided by time slot
	 */
	// ArrayList<DataTimeSlot> listDataTimeSlot;
	ArrayList<CheckIn> listAllCheckin;

	/**
	 * @param cityName
	 * @param dataURL
	 */
	public DataAnalyzer(String cityName, String dataURL) {
		this.cityName = cityName;
		this.dataURL = dataURL;
		// this.listDataTimeSlot = new ArrayList<DataTimeSlot>();
		this.listAllCheckin = new ArrayList<>();
		loadData();
	}

	/**
	 * @param dataURL2
	 * @return
	 */
	private void loadData() {

		try {
			InputStream inputs = new FileInputStream(dataURL);
			InputStreamReader inputReader = new InputStreamReader(inputs);
			@SuppressWarnings("resource")
			BufferedReader br = new BufferedReader(inputReader);
			String checkInString = br.readLine();
			while (checkInString != null) {
				// classify(new CheckIn(checkInString));
				listAllCheckin.add(new CheckIn(checkInString));
				checkInString = br.readLine();
			}
		} catch (Exception e) {
			System.out.println("Some thing wrong!\n");
			e.printStackTrace();
		}

	}

	// /**
	// * @param checkIn
	// * @throws Exception
	// */
	// private void classify(CheckIn checkIn) throws Exception {
	// int day = checkIn.getCheckInTime().getCityTime().getDayOfWeek();
	// int hours = checkIn.getCheckInTime().getCityTime().getHourOfDay();
	//
	// TimeInDay timeInDay;
	// DayInWeek dayInWeek;
	//
	// if (hours >= 0 && hours < 8)
	// timeInDay = TimeInDay.AFTERNIGHT;
	// else if (hours >= 8 && hours < 12)
	// timeInDay = TimeInDay.MORNING;
	// else if (hours >= 12 && hours < 18)
	// timeInDay = TimeInDay.AFTERNOON;
	// else if (hours >= 18 && hours <= 23)
	// timeInDay = TimeInDay.NIGHT;
	// else
	// throw new Exception("The hours of day is invalid: " + hours);
	//
	// switch (day) {
	// case 1:
	// dayInWeek = DayInWeek.MON;
	// break;
	// case 2:
	// dayInWeek = DayInWeek.TUE;
	// break;
	// case 3:
	// dayInWeek = DayInWeek.WED;
	// break;
	// case 4:
	// dayInWeek = DayInWeek.THU;
	// break;
	// case 5:
	// dayInWeek = DayInWeek.FRI;
	// break;
	// case 6:
	// dayInWeek = DayInWeek.SAT;
	// break;
	// case 7:
	// dayInWeek = DayInWeek.SUN;
	// break;
	// default:
	// throw new Exception("The day of week is invalid: " + day);
	// }
	//
	// boolean existTimeSlot = false;
	// for (int i = 0; i < listDataTimeSlot.size(); i++) {
	// if (listDataTimeSlot.get(i).getTimeInDay() == timeInDay
	// && listDataTimeSlot.get(i).getDayInWeek() == dayInWeek) {
	// existTimeSlot = true;
	// listDataTimeSlot.get(i).addACheckIn(checkIn);
	// }
	// }
	//
	// if (!existTimeSlot) {
	// DataTimeSlot newDataSlot = new DataTimeSlot(timeInDay,
	// dayInWeek,cityName);
	// newDataSlot.addACheckIn(checkIn);
	// listDataTimeSlot.add(newDataSlot);
	// }
	//
	// }

	/**
	 * @return the cityName
	 */
	public String getCityName() {
		return cityName;
	}

	// public void analyzer(){
	// for(int i=0;i<listDataTimeSlot.size();i++){
	// listDataTimeSlot.get(i).analyze();
	// }
	// }
	//

	public void queryData(int startHour, int endHour, int[] dayInWeek,
			String outputFilePath) {
		ArrayList<CheckIn> listResultCheckin = new ArrayList<>();
		for (int i = 0; i < listAllCheckin.size(); i++) {
			DateTime checkInTime = listAllCheckin.get(i).getCheckInTime()
					.getCityTime();
			if (checkInTime.getHourOfDay() > startHour
					&& checkInTime.getHourOfDay() < endHour
					&& dayInWeek(dayInWeek, checkInTime.getDayOfWeek())) {
				listResultCheckin.add(listAllCheckin.get(i));
			}
		}

		writeDataToFile(listResultCheckin, outputFilePath);
	}

	/**
	 * @param listResultCheckin
	 * @param outputFilePath
	 */
	private void writeDataToFile(ArrayList<CheckIn> listResultCheckin,
			String outputFilePath) {
		FileWriter file = new FileWriter(new File(outputFilePath), true);
		BufferedWriter write = null;
		try {
			write = new BufferedWriter(file);
			for (int i = 0; i < listResultCheckin.size(); i++) {
				write.write(listResultCheckin.get(i).toString());
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				write.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

	}

	/**
	 * @param dayInWeek
	 * @return
	 */
	private boolean dayInWeek(int[] daysInWeek, int day) {
		for (int i = 0; i < daysInWeek.length; i++) {
			if (daysInWeek[i] == day)
				return true;
		}
		return false;
	}
}
